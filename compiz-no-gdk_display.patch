--- gtk/window-decorator/gtk-window-decorator.c.orig	2011-02-09 20:44:57.932713146 +0500
+++ gtk/window-decorator/gtk-window-decorator.c	2011-02-09 20:47:29.105416146 +0500
@@ -2859,6 +2859,7 @@
 		 Atom   atom,
 		 Window *val)
 {
+    Display *dpy = GDK_DISPLAY_XDISPLAY (gdk_display_get_default ());
     Atom   type;
     int	   format;
     gulong nitems;
@@ -2871,7 +2872,7 @@
     gdk_error_trap_push ();
 
     type = None;
-    result = XGetWindowProperty (gdk_display,
+    result = XGetWindowProperty (dpy,
 				 xwindow,
 				 atom,
 				 0, G_MAXLONG,
@@ -5810,7 +5811,7 @@
     WnckWindow *win = data;
 
     gdk_error_trap_push ();
-    XSetTransientForHint (gdk_display,
+    XSetTransientForHint (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()),
 			  GDK_WINDOW_XID (dialog->window),
 			  wnck_window_get_xid (win));
     gdk_display_sync (gdk_display_get_default ());
@@ -5820,17 +5821,18 @@
 static char *
 get_client_machine (Window xwindow)
 {
+    Display *xdisplay = GDK_DISPLAY_XDISPLAY (gdk_display_get_default ());
     Atom   atom, type;
     gulong nitems, bytes_after;
     guchar *str = NULL;
     int    format, result;
     char   *retval;
 
-    atom = XInternAtom (gdk_display, "WM_CLIENT_MACHINE", FALSE);
+    atom = XInternAtom (xdisplay, "WM_CLIENT_MACHINE", FALSE);
 
     gdk_error_trap_push ();
 
-    result = XGetWindowProperty (gdk_display,
+    result = XGetWindowProperty (xdisplay,
 				 xwindow, atom,
 				 0, G_MAXLONG,
 				 FALSE, XA_STRING, &type, &format, &nitems,
@@ -5857,6 +5859,8 @@
 static void
 kill_window (WnckWindow *win)
 {
+    GdkDisplay      *gdk_display = gdk_display_get_default ();
+    Display         *xdisplay    = GDK_DISPLAY_XDISPLAY (gdk_display);
     WnckApplication *app;
 
     app = wnck_window_get_application (win);
@@ -5882,8 +5886,8 @@
     }
 
     gdk_error_trap_push ();
-    XKillClient (gdk_display, wnck_window_get_xid (win));
-    gdk_display_sync (gdk_display_get_default ());
+    XKillClient (xdisplay, wnck_window_get_xid (win));
+    gdk_display_sync (gdk_display);
     gdk_error_trap_pop ();
 }
 
@@ -6513,9 +6517,9 @@
 update_shadow (void)
 {
     decor_shadow_options_t opt;
-    Display		   *xdisplay = gdk_display;
-    GdkDisplay		   *display = gdk_display_get_default ();
-    GdkScreen		   *screen = gdk_display_get_default_screen (display);
+    GdkDisplay                   *display  = gdk_display_get_default ();
+    Display              *xdisplay = GDK_DISPLAY_XDISPLAY (display);
+    GdkScreen            *screen   = gdk_display_get_default_screen (display);
 
     opt.shadow_radius  = shadow_radius;
     opt.shadow_opacity = shadow_opacity;
